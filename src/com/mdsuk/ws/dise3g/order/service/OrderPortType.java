
package com.mdsuk.ws.dise3g.order.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.mdsuk.ws.dise3g.order.dto.service.OrderResponseType;
import com.mdsuk.ws.dise3g.order.dto.service.OrderType;
import com.mdsuk.ws.dise3g.order.dto.service.QueryOrderResponseType;
import com.mdsuk.ws.dise3g.order.dto.service.QueryOrderType;
import com.mdsuk.ws.dise3g.order.dto.service.QueryOrdersResponseType;
import com.mdsuk.ws.dise3g.order.dto.service.QueryOrdersType;
import com.mdsuk.ws.dise3g.order.dto.service.StockEnquiryResponseType;
import com.mdsuk.ws.dise3g.order.dto.service.StockEnquiryType;
import com.mdsuk.ws.dise3g.order.dto.service.UpdateOrderStatusResponseType;
import com.mdsuk.ws.dise3g.order.dto.service.UpdateOrderStatusType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OrderPortType", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
@XmlSeeAlso({
    com.mdsuk.ws.dise3g.account.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.address.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.agreement.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.agreementtariff.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.base.ObjectFactory.class,
    com.mdsuk.ws.dise3g.bundle.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.discount.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.fault.ObjectFactory.class,
    com.mdsuk.ws.dise3g.order.definition.ObjectFactory.class,
    com.mdsuk.ws.dise3g.order.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.order.dto.service.ObjectFactory.class,
    com.mdsuk.ws.dise3g.payment.dto.business.ObjectFactory.class,
    com.mdsuk.ws.dise3g.subscription.dto.business.ObjectFactory.class
})
public interface OrderPortType {


    /**
     * 
     * @param orderData
     * @return
     *     returns com.mdsuk.ws.dise3g.order.dto.service.OrderResponseType
     * @throws SecurityFault
     * @throws ValidationFault
     * @throws ServiceUnavailableFault
     * @throws SystemFault
     */
    @WebMethod(operationName = "CreateOrder")
    @WebResult(name = "Result", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
    @RequestWrapper(localName = "CreateOrder", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.CreateOrder")
    @ResponseWrapper(localName = "CreateOrderResponse", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.CreateOrderResponse")
    public OrderResponseType createOrder(
        @WebParam(name = "OrderData", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
        OrderType orderData)
        throws SecurityFault, ServiceUnavailableFault, SystemFault, ValidationFault
    ;

    /**
     * 
     * @param orderData
     * @return
     *     returns com.mdsuk.ws.dise3g.order.dto.service.QueryOrderResponseType
     * @throws SecurityFault
     * @throws ValidationFault
     * @throws ServiceUnavailableFault
     * @throws SystemFault
     */
    @WebMethod(operationName = "QueryOrder")
    @WebResult(name = "Result", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
    @RequestWrapper(localName = "QueryOrder", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryOrder")
    @ResponseWrapper(localName = "QueryOrderResponse", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryOrderResponse")
    public QueryOrderResponseType queryOrder(
        @WebParam(name = "OrderData", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
        QueryOrderType orderData)
        throws SecurityFault, ServiceUnavailableFault, SystemFault, ValidationFault
    ;

    /**
     * 
     * @param queryData
     * @return
     *     returns com.mdsuk.ws.dise3g.order.dto.service.StockEnquiryResponseType
     * @throws SecurityFault
     * @throws ValidationFault
     * @throws ServiceUnavailableFault
     * @throws SystemFault
     */
    @WebMethod(operationName = "QueryStock")
    @WebResult(name = "Result", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
    @RequestWrapper(localName = "QueryStock", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryStock")
    @ResponseWrapper(localName = "QueryStockResponse", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryStockResponse")
    public StockEnquiryResponseType queryStock(
        @WebParam(name = "QueryData", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
        StockEnquiryType queryData)
        throws SecurityFault, ServiceUnavailableFault, SystemFault, ValidationFault
    ;

    /**
     * 
     * @param orderHistory
     * @return
     *     returns com.mdsuk.ws.dise3g.order.dto.service.QueryOrdersResponseType
     * @throws SecurityFault
     * @throws ValidationFault
     * @throws ServiceUnavailableFault
     * @throws SystemFault
     */
    @WebMethod(operationName = "QueryOrders")
    @WebResult(name = "Result", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
    @RequestWrapper(localName = "QueryOrders", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryOrders")
    @ResponseWrapper(localName = "QueryOrdersResponse", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.QueryOrdersResponse")
    public QueryOrdersResponseType queryOrders(
        @WebParam(name = "OrderHistory", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
        QueryOrdersType orderHistory)
        throws SecurityFault, ServiceUnavailableFault, SystemFault, ValidationFault
    ;

    /**
     * 
     * @param updateData
     * @return
     *     returns com.mdsuk.ws.dise3g.order.dto.service.UpdateOrderStatusResponseType
     * @throws SecurityFault
     * @throws ServiceUnavailableFault
     * @throws ValidationFault
     * @throws SystemFault
     */
    @WebMethod(operationName = "UpdateOrderStatus")
    @WebResult(name = "Result", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
    @RequestWrapper(localName = "UpdateOrderStatus", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.UpdateOrderStatus")
    @ResponseWrapper(localName = "UpdateOrderStatusResponse", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition", className = "com.mdsuk.ws.dise3g.order.definition.UpdateOrderStatusResponse")
    public UpdateOrderStatusResponseType updateOrderStatus(
        @WebParam(name = "UpdateData", targetNamespace = "http://mdsuk.com/ws/dise3g/order/definition")
        UpdateOrderStatusType updateData)
        throws SecurityFault, ServiceUnavailableFault, SystemFault, ValidationFault
    ;

}
